name: Java CI with Gradle

on:
  workflow_dispatch:
  pull_request:
  push:

permissions:
  contents: read

jobs:
  runBenchmarks:
    strategy:
      matrix:
        include:
          # jvm
          - target: jvmBenchmark
            tag: Jvm
            os: ubuntu-latest
          # js
          - target: jsBenchmark
            tag: Js
            os: ubuntu-latest
          # linux
          - target: linuxX64Benchmark
            tag: Linux
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache KMP tooling
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.konan
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
            build
            benchmark/build
            benchmark/.gradle
            library/build
            library/.gradle
          key: ${{ runner.os }}-benchmark-${{ matrix.tag }}-${{ hashFiles('**/libs.versions.toml') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-benchmark-${{ matrix.tag }}-${{ hashFiles('**/libs.versions.toml') }}

      - name: enable KVM
        if: runner.os == 'Linux'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Produce artifacts
        run: ./gradlew ${{ matrix.target }}

      - name: Execute after actions
        run: ${{ matrix.after }}

      - name: Save cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.konan
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
            build
            benchmark/build
            benchmark/.gradle
            library/build
            library/.gradle
          key: ${{ runner.os }}-benchmark-${{ matrix.tag }}-${{ hashFiles('**/libs.versions.toml') }}-${{ github.run_id }}

      - name: Upload artifacts to github
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }}-${{ matrix.tag }}-artifact
          path: benchmark/build/reports/benchmark/main/*.json

  build:
    strategy:
      matrix:
        include:
          - target: iosSimulatorArm64Test
            os: macos-latest
          - target: iosX64Test
            os: macos-latest
          - target: jsTest
            os: ubuntu-latest
          - target: jvmTest
            os: ubuntu-latest
          - target: linuxX64Test
            os: ubuntu-latest
          - target: wasmJsTest
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    - uses: actions/cache@v4
      with:
        path: |
          ~/.konan
        key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'zulu'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@ce999babab2de1c4b649dc15f0ee67e6246c994f
      with:
        arguments: ${{ matrix.target }}
